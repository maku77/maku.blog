<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CSS on まくろぐ</title><link>https://maku.blog/tags/css/</link><description>Recent content in CSS on まくろぐ</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Tue, 14 Jul 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://maku.blog/tags/css/index.xml" rel="self" type="application/rss+xml"/><item><title>Electron アプリのレイアウトにはフレックスボックスなど新しいスタイルを使用する</title><link>https://maku.blog/p/awamxak/</link><pubDate>Tue, 14 Jul 2020 00:00:00 +0000</pubDate><guid>https://maku.blog/p/awamxak/</guid><description>Electron アプリのレンダリングには、最新の Chromium を使用できるため、比較的新しい CSS 機能を安心して使用することができます。 Web ブラウザで動作するわけではないので、ベンダープレフィックスなどのケアをする必要もありません。
例えば、次の例では、サイドバーと領域の広がる本文部分に別れるレイアウトを、CSS のフレックスボックス (Flexbox) で実現しています（ここでは React を使用しています）。
app.tsx import * as React from &amp;#39;react&amp;#39;; const styles: {[key: string]: React.CSSProperties} = { container: { display: &amp;#39;flex&amp;#39;, minHeight: &amp;#39;100vh&amp;#39;, }, sidebar: { background: &amp;#39;lightgray&amp;#39;, width: &amp;#39;150px&amp;#39;, }, body: { background: &amp;#39;#ddd&amp;#39;, flex: 1, } }; export class App extends React.Component { public render(): React.ReactNode { return ( &amp;lt;div style={styles.container}&amp;gt; &amp;lt;div style={styles.sidebar}&amp;gt;Sidebar&amp;lt;/div&amp;gt; &amp;lt;div style={styles.body}&amp;gt;Body&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; ); } } フレックスボックスはとても柔軟で、画面上端で左右に広がるメニュー など、いろいろな用途に使用することができます。</description></item></channel></rss>