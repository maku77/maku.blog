<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>数学 on まくろぐ</title><link>https://maku.blog/tags/%E6%95%B0%E5%AD%A6/</link><description>Recent content in 数学 on まくろぐ</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Mon, 29 Apr 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://maku.blog/tags/%E6%95%B0%E5%AD%A6/index.xml" rel="self" type="application/rss+xml"/><item><title>機械学習メモ: ROC カーブと AUC</title><link>https://maku.blog/p/ha99p76/</link><pubDate>Mon, 29 Apr 2024 00:00:00 +0000</pubDate><guid>https://maku.blog/p/ha99p76/</guid><description>ROC カーブとは ROC (Receiver Operating Characteristic) カーブ（曲線） は、二値分類モデルの性能を評価するためのグラフです。 陽性と陰性を判断するための閾値を変換させたときに、真陽性率 (TPR: True Positive Rate) と 偽陽性率 (FPR: False Positive Rate) がどのように変化するかプロットしたものです。
参考リンク TP/TN/FP/FN などの用語について → 混同行列と関連指標 真陽性率 (TPR) と 偽陽性率 (FPR) 真陽性率（＝再現率、Recall）は、陽性（正例）サンプルのうち、正しく陽性と予測できたものが何％あったかを示すもので、高いほど（1 に近いほど）よいです。
$$ TPR \left( 真陽性率 \right) = \frac{TP}{TP + FN} $$
偽陽性率は、陰性（負例）サンプルのうち、誤って陽性と予測してしまったものが何％あったかを示すもので、低いほど（0 に近いほど）よいです。
$$ FPR \left( 偽陽性率 \right) = \frac{FP}{FP + TN} $$
これらはトレードオフの関係にあり、陽性あるいは陰性と判断するための閾値を変化させたときに次のような感じで変化します。
図: 一般的な ROC 曲線 このとき、どの閾値がよいかは一概には言えなくて、真陽性率を犠牲にしてでも偽陽性率を低くしたいのであれば閾値 A を選べばよいし、真陽性率をできるだけ高めたいのであれば閾値 C を選びます。 バランスよく選びたいのであれば閾値 B を選ぶことになります。
AUC (Area Under the Curve) 二値分類モデルの性能を示すための指標として、AUC (Area Under the Curve) があります。 AUC は、ROC カーブの下の部分面積であり、大きいほど（1 に近いほど）よい性能だということを表します。 前述の通り、二値分類モデルで使用する閾値は、どの値がベストかは一概に決められないのですが、AUC を使えば、二値分類モデルの全体的な性能を客観的に示すことができます。</description></item><item><title>機械学習メモ: 混同行列と関連指標</title><link>https://maku.blog/p/9dveh3m/</link><pubDate>Sun, 21 Apr 2024 00:00:00 +0000</pubDate><guid>https://maku.blog/p/9dveh3m/</guid><description>混同行列 (confusion matrix) とは 混同行列 (confusion matrix) は、機械学習やパターン認識などの分野で使われる評価手法のひとつで、主に分類問題の性能を評価するために使用されます。 混同行列は、実際のデータが属するクラスと、モデル（分類器）が予測したクラスを比較することで、分類器の性能を可視化するのに役立ちます。
図: 混同行列 混同行列は、予測モデルが予測したデータを下記の 4 種類に分けてカウントします。 陽性・陰性というのは、例えば、「病気の有無」や「本物・偽物」といった分類を示します。
真陽性 (TP: True Positives) &amp;hellip; 陽性データのうち、モデルが正しく陽性と予測した数。 真陰性 (TN: True Negatives) &amp;hellip; 陰性データのうち、モデルが正しく陰性と予測した数。 偽陽性 (FP: False Positives) &amp;hellip; 陰性データのうち、モデルが誤って陽性と予測した数。 偽陰性 (FN: False Negatives) &amp;hellip; 陽性データのうち、モデルが誤って陰性と予測した数。 一般的には二値分類に使われますが、多クラスの分類でも利用されます。 混同行列をベースにして、分類問題の様々な評価指標を計算できます。
正答率 (accuracy) と誤答率 (error rate) 再現率 (recall) と 適合率 (precision) F1 スコア、Fβ スコア マシューズ相関係数 (MCC) ここで、正答率 (accuracy) というのは、単純に「予測が当たった数／データ数」という計算で求められるものです。 例えば、10 個のデータを分類して、5 個のデータを正しく分類できれば、正答率 (accuracy) は50％です。
でも、実世界の分類問題はこんな簡単に評価できるものではなかったりします。 典型的なのが疾患の有無の判断です。 実際に 100 人中 5 人が疾患を持っている場合、誰も疾患を持っていないと予測すれば、その予測モデルの精度は95％になります。 でもそんな予測モデルは役に立ちませんよね？ そうではなく、いかに間違いなく疾患を持っている人を見つけられるかが重要なはずです。 そこで必要になってくるのが、再現率、適合率、F1 スコアといった評価指標です。</description></item><item><title>数学メモ: 調和平均 (harmonic mean) とは</title><link>https://maku.blog/p/4fz2tti/</link><pubDate>Sat, 20 Apr 2024 00:00:00 +0000</pubDate><guid>https://maku.blog/p/4fz2tti/</guid><description>「1、2、3 の平均は？」と聞かれたら、答えは \( \frac{1+2+3}{3} = 2 \) ですね。 この平均は、正確には算術平均 (arithmetic mean / arithmetical mean) と呼ばれているもので、実は他にもいろいろな種類の平均があります。 今回説明するのは 調和平均 (harmonic mean) です。
調和平均の求め方 調和平均は、逆数の算術平均をとったものを逆数にする ことで求めます。
例えば、1、2、3 という 3 つの値がある場合、それらの逆数の算術平均が
$$ \frac{\frac{1}{1} + \frac{1}{2} + \frac{1}{3}}{3} $$
なので、さらにその逆数をとって、
$$ \begin{align} \frac{3}{\frac{1}{1} + \frac{1}{2} + \frac{1}{3}} &amp;amp;= \frac{18}{11} \\ &amp;amp;= 1.636363&amp;hellip; \end{align} $$
が調和平均の値になります。
調和平均が意味するもの 調和平均は、個々の要素の値が反比例する形で全体に影響を与える場合に使います。 典型的なのは平均時速を求める次のような問題です。
問. ある道のりの往路を時速 10km/h、復路を時速 30km/h で走ったときの平均時速を求めよ。
これを単純に \( \frac{10 + 30}{2} = 20 \) km/h と計算するのは間違いです。 時速 10km/h と時速 30km/h には 3 倍の速度差があるのは確かなのですが、それぞれの速度で走った時間も 3 倍異なるからです。 この平均時速を求めるには調和平均を使い、\( \frac{2}{\frac{1}{10} + \frac{1}{30}} = 15 \) km/h とするのが正解です。</description></item><item><title>機械学習メモ: 評価関数（コスト関数）のまとめ</title><link>https://maku.blog/p/psotadn/</link><pubDate>Tue, 06 May 2014 00:00:00 +0000</pubDate><guid>https://maku.blog/p/psotadn/</guid><description>平均絶対誤差 (MAE: Mean Absolute Error) $$ \text{MAE} = \frac{1}{n} \sum_{i=1}^{n} |y_i - \hat{y}_i| $$
\( y_i \) : 実際の値 \( \hat{y_i} \) : 予測値 NumPy での実装 mae = np.mean(np.abs(actual_values - predicted_values)) 平均二乗誤差 (MSE: Mean Squared Error) $$ \operatorname{MSE}=\frac{1}{n}\sum_{i=1}^n(y_i-\hat{y_i})^2 $$
\( y_i \) : 実際の値 \( \hat{y_i} \) : 予測値 予測値とのずれの二乗をすべて足して平均をとったもの。
平均二乗誤差平方根 (RMSE: Root Mean Squared Error) $$ \operatorname{RMSE}=\sqrt{\operatorname{MSE}}=\sqrt{\frac{1}{n}\sum_{i=1}^n(y_i-\hat{y_i})^2} $$
\( y_i \) : 実際の値 \( \hat{y_i} \) : 予測値 平均二乗誤差 (MSE: Mean Squared Error) の平方根。 実測値と予測値がどれほど異なっているかを表します。</description></item><item><title>数学メモ: 任意の桁のレプ・ユニット (repeated units) を求める方法</title><link>https://maku.blog/p/29awadj/</link><pubDate>Sun, 26 May 2013 00:00:00 +0000</pubDate><guid>https://maku.blog/p/29awadj/</guid><description>レプ・ユニット (repeated units) というのは、1 の連続した数字を表します（例: 1, 11, 111, 1111）。
n 桁のレプ・ユニットは、以下のような計算で求められます。
$$ R_{n} = \frac{10^n - 1}{9} $$
下記は Python でこの計算をテストする例です。
repeated_units.py def repeated_units(n): return (10 ** n - 1) // 9 for i in range(1, 10): print(repeated_units(i)) 実行結果 1 11 111 1111 11111 111111 1111111 11111111 111111111 もちろん、Python のプログラムとしては、単純に繰り返し文字列を作成してから、それを数値に変換することもできます。
def repeated_units(n): return int(&amp;#39;1&amp;#39; * n)</description></item><item><title>数学メモ: 書籍『はじめての数論（原著第3版）』の練習問題メモ</title><link>https://maku.blog/p/qyohkjh/</link><pubDate>Wed, 22 May 2013 00:00:00 +0000</pubDate><guid>https://maku.blog/p/qyohkjh/</guid><description>練習問題 1.1 問題 平方数でも三角数でもある最初の 2 つの数は 1 と 36 である。次に小さな例を見つけよう。できれば、その次の例も見つけよう。三角数でありかつ平方数でもある数を見つける有効な方法を見つけることはできるだろうか？こうした性質をもつ数は無数にあると考えられるか？
解答 Python で三角数 (triangle number) ＝ 平方数 (square number) となる数値を見つけてみる。
#!/usr/bin/env python def triangle(k): return k * (k + 1) // 2 def square(k): return k ** 2 a = 1 b = 1 while True: tri = triangle(a) squ = square(b) if tri == squ: print(&amp;#39;triangle({}) = square({}) = {}&amp;#39;.format(a, b, tri)) a += 1 b += 1 elif tri &amp;lt; squ: a += 1 else: b += 1 if a &amp;gt; 10000000: break 実行結果 triangle(1) = square(1) = 1 triangle(8) = square(6) = 36 triangle(49) = square(35) = 1225 triangle(288) = square(204) = 41616 triangle(1681) = square(1189) = 1413721 triangle(9800) = square(6930) = 48024900 triangle(57121) = square(40391) = 1631432881 triangle(332928) = square(235416) = 55420693056 triangle(1940449) = square(1372105) = 1882672131025 数を大きくすれば、無数に見つかりそうな予感はします。</description></item><item><title>数学メモ: 累乗 (2^x) と階乗 (x!) の増え方を比べる</title><link>https://maku.blog/p/ts5mhjj/</link><pubDate>Thu, 02 May 2013 00:00:00 +0000</pubDate><guid>https://maku.blog/p/ts5mhjj/</guid><description>$2^x$ の値は、$x$ が増えるごとに 2倍、2倍、2倍、で増えていきます。 一方、$x!$ の値は、$x$ が増えるごとに 2倍、3倍、4倍、と増えていくので激しい増え方をします。 どちらも指数関数ですが、圧倒的に $x!$ の増え方の方が大きいです。
だからびっくりマークが付いているんですね。
値が、8 桁に到達するのは、それぞれ、
$2^{24}$ = 16777216 11! = 39916800 です。 組み合わせ問題を PC を使って総当たりで解く場合、これくらいのサイズで限界に達します（短い時間で解く場合）。 実際には、$2^{23}$ と 10! までの総当たりが限度と覚えておけばよいでしょう。
$2^x$ の増え方 $2^x$ は以下のような感じで増えます。
2**1 = 2 2**2 = 4 2**3 = 8 2**4 = 16 2**5 = 32 2**6 = 64 2**7 = 128 2**8 = 256 2**9 = 512 2**10 = 1024 2**11 = 2048 2**12 = 4096 2**13 = 8192 2**14 = 16384 2**15 = 32768 2**16 = 65536 2**17 = 131072 2**18 = 262144 2**19 = 524288 2**20 = 1048576 2**21 = 2097152 2**22 = 4194304 2**23 = 8388608 2**24 = 16777216 2**25 = 33554432 2**26 = 67108864 2**27 = 134217728 2**28 = 268435456 2**29 = 536870912 2**30 = 1073741824 2**31 = 2147483648 2**32 = 4294967296 2**33 = 8589934592 2**34 = 17179869184 2**35 = 34359738368 2**36 = 68719476736 2**37 = 137438953472 2**38 = 274877906944 2**39 = 549755813888 2**40 = 1099511627776 2**41 = 2199023255552 2**42 = 4398046511104 2**43 = 8796093022208 2**44 = 17592186044416 2**45 = 35184372088832 2**46 = 70368744177664 2**47 = 140737488355328 2**48 = 281474976710656 2**49 = 562949953421312 2**50 = 1125899906842624 x!</description></item><item><title>数学メモ: TeX チートシート</title><link>https://maku.blog/p/oau2e7h/</link><pubDate>Mon, 29 Apr 2013 00:00:00 +0000</pubDate><guid>https://maku.blog/p/oau2e7h/</guid><description>演算子、等号（不等号） 演算子 表示 TeX 説明 \( a+b \) a+b plus \( a-b \) a-b minus \( a \times b \) a \times b multiplied by, times \( a \pm b \) a \pm b plus or minus 等号・不等号 表示 TeX 説明 \( a = b \) a = b equal to \( a \equiv b \) a \equiv b identical to （定義・合同） \( a \neq b \) a \neq b not equal to \( a \lt b \) a \lt b less than （そのまま &amp;lt; でも OK） \( a \gt b \) a \gt b greater than （そのまま &amp;gt; でも OK） \( a \leq b \) a \leq b less than or equal to \( a \geq b \) a \geq b greater than or equal to \( a \ll b \) a \ll b much less than \( a \gg b \) a \gg b much greater than 近似 表示 TeX 説明 \( a \sim b \) a \sim b similar \( a \simeq b \) a \simeq b similar equal \( a \approx b \) a \approx b approximately equal 平均 (Mean)、標準偏差（Standard Deviation）、分散 (Variance) 表示 TeX 説明 \( \bar{x} \)\(\overline{x}\) \bar{x}\overline{x} サンプル平均 \( \mu \) \mu 母集団平均 \( s \) s サンプル標準偏差 \( \sigma \) \sigma 母集団標準偏差 \( s^2 \) s^2 サンプル分散 \( \sigma^2 \) \sigma^2 母集団分散 対数 (Logarithm) 表示 TeX 説明 \( \log x \) \log x 対数 \( \log_2 x \) \log_2 x 対数の底が 2 の場合 \( \log_{10} x \) \log_{10} x 常用対数 (common logarithm) \( \ln x \) \ln x 自然対数 (natural logarithm) 10 を底とする対数を 常用対数 (common logarithm) と呼びます。 ネイピア数 \( \mathrm{e} \) を底とする対数を 自然対数 (natural logarithm) と呼びます。 自然対数はラテン語で logarithmus naturalis なので ln と略されます。 分数、連分数 表示 TeX 説明 \( y = \frac{a}{b} \) y = \frac{a}{b} 分数 (fraction) \( y = \frac{a-1}{\frac{b+1}{c+2}} \) y = \frac{a-1}{\frac{b+1}{c+2}} 連分数 (continued fraction) 論理演算（論理積∩、論理和∪、含意⇒） 表示 TeX 説明 \( \cup \) \cup 論理和 (logical add, logical sum, OR) \( \cap \) \cap 論理積 (logical AND, logical multiply) \( \oplus \) \oplus 排他的論理和 (exclusive OR) \( A \&amp;amp;\&amp;amp; B \) A &amp;amp;&amp;amp; B 条件付き論理積 (conditional AND, short-circuit logical AND) \( A || B \) A || B 条件付き論理和 (conditional OR, short-circuit logical OR) \( \Rightarrow \) \Rightarrow 含意 (conditional implication) 順列、組み合わせ 表示 TeX 説明 \( {}_n \mathrm{P} _r \) {}_n \mathrm{P} _r 順列 (permutation) \( {}_n \Pi _r \) {}_n \Pi _r 重複順列 (repeated permutation) \( {}_n \mathrm{C} _r \) {}_n \mathrm{C} _r 組み合わせ1 (combination) \( {n}\choose{r} \) {n}\choose{r} 組み合わせ2 (combination) ※海外ではこう書くことがあります \( {}_n \mathrm{H} _r \) {}_n \mathrm{H} _r 重複組み合わせ (repeated combination) Sum 型記号 表示 TeX 説明 \( \sum \) \sum 合計 (sum) \( \sum_{k=1}^{n}k \) \sum_{k=1}^{n}k 合計 (sum) \( \sum_{i=1}^{n}x_{i} \) \sum_{i=1}^{n}x_{i} 合計 (sum) 等号 align $$ \begin{align} (a + b)^2 &amp;amp;= (a + b)(a + b) \\ &amp;amp;= a^2 + 2ab + b^2 \end{align} $$</description></item><item><title>数学メモ: 公式 - 二次方程式の解</title><link>https://maku.blog/p/x3d286c/</link><pubDate>Mon, 29 Apr 2013 00:00:00 +0000</pubDate><guid>https://maku.blog/p/x3d286c/</guid><description>\( ax^2 + bx + c = 0 \) の解は、以下のように求められます。
$$ x = \frac{-b \pm \sqrt{b^2 - 4ac}}{2a} $$
この式を導くには、元の式を平方完成して \( a(x + \frac{b}{2a})^2 - \frac{b^2}{4a} + c \) の形にして計算します。</description></item><item><title>数学メモ: 公式 - 二項定理</title><link>https://maku.blog/p/draiajt/</link><pubDate>Sat, 10 Nov 2012 00:00:00 +0000</pubDate><guid>https://maku.blog/p/draiajt/</guid><description>二項定理の公式 （一般化）二項定理 $$ (a+b)^n=\sum_{r=0}^{n} {}_n \mathrm{C}_r a^{n-r}b^{n} $$
例: 2乗の場合 $$ \begin{aligned} (a+b)^2 &amp;amp;= \sum_{r=0}^{2} {}_2 \mathrm {C}_r a^{2-r}b^r \\ &amp;amp;= {}_2 \mathrm{C}_0 a^2b^0 + {}_2 \mathrm{C}_1 a^1b^1 + {}_2 \mathrm{C}_2 a^0b^2 \\ &amp;amp;= a^2 + 2ab + b^2 \end{aligned} $$
例: 3乗の場合 $$ \begin{aligned} (a+b)^3 &amp;amp;= \sum_{r=0}^{3} {}_3 \mathrm{C}_r a^{3-r}b^r \\ &amp;amp;= {}_3 \mathrm{C}_0 a^3b^0 + {}_3 \mathrm{C}_1 a^2b^1 + {}_3 \mathrm{C}_2 a^1b^2 + {}_3 \mathrm{C}_3 a^0b^3 \\ &amp;amp;= a^3 + 3a^2b + 3ab^2 + b^3 \end{aligned} $$</description></item><item><title>数学メモ: 駒大数学科の問題</title><link>https://maku.blog/p/iju5ion/</link><pubDate>Tue, 20 Mar 2012 00:00:00 +0000</pubDate><guid>https://maku.blog/p/iju5ion/</guid><description>ビートたけしの『駒大数学科』で出てきた問題で、中村先生の解答がかっこよかったのでメモメモ。
問題 「3で割ると2余る」「5で割ると3余る」「11で割ると9余る」整数のうち、1000以下の最大のものを求めよ。 解答 以下のように、それぞれを「○の倍数＋□」という表現に変えて、□ のところを強引に合わせる。
「3で割ると2余る」→「3の倍数+1」−2 と考える 「5で割ると3余る」→「5の倍数」−2 と考える 「11で割ると9余る」→「11の倍数」−2 と考える すると、答えとなる数は次のように表現できる。
$$ (3m+1) \times 5 \times 11 - 2 $$
これが、1000 より小さい数になればよいので、m=5 のときの 878 という値が正解となる。</description></item><item><title>数学メモ: 最大公約数 (GCD) と最小公倍数 (LCM)</title><link>https://maku.blog/p/fvvzur8/</link><pubDate>Fri, 02 Mar 2012 00:00:00 +0000</pubDate><guid>https://maku.blog/p/fvvzur8/</guid><description>最小公倍数を求める ユークリッドの互除法 により、最大公約数 (GCD: Greatest Common Divisor) を求めます。 正の整数 a, b (a &amp;gt; b) の最大公約数 GCD(a, b) を求めたいとします。
まず、a が b で割り切れれば、明らかに b が最大公約数になりますので、答えは b です。 問題は割り切れない場合です。 a, b が最大公約数 d を持つとすると、
a = md b = nd と書けます。すると、
a-b = (m-n)d となるので、a-b も最大公約数 d を持つことが分かります。 言い換えると、d の倍数（この場合は a）から d の倍数（この場合は b）を引いても、残りは d の倍数であるということです。
GCD(a, b) = GCD(a-b, b) ただし、a &amp;gt; b 依然として a-b &amp;gt; b のときは、同様に左側の値から b を引き続けて、
GCD(a, b) = GCD(a-b, b) = GCD(a-2b, b) = GCD(a-3b, b) = .</description></item><item><title>数学メモ: 頂点の重心と面の重心</title><link>https://maku.blog/p/v2y4dwt/</link><pubDate>Fri, 16 Dec 2011 00:00:00 +0000</pubDate><guid>https://maku.blog/p/v2y4dwt/</guid><description>頂点の重心 数学的な求め方: 各頂点のx座標、y座標を平均する 物理的な意味: 各頂点におもりを付けて、各頂点から張った糸をまとめて吊り上げて平行になる点が、頂点の重心。 面の重心 数学的な求め方: 面を三角形に分割し、それぞれの三角形の重心を求め、各三角形の面積を重みとして重み付き平均を求める 物理的な意味: 図形の一点に穴を開けて壁などに吊るし、垂直な線を引く。これをもう一カ所の点で同じことをして、線が交わる場所が面の重心。 性質 三角形、長方形、平行四辺形において、頂点の重心と面の重心は一致する。 三角形の重心は、中線（頂点と向かい合う辺の中点を結ぶ線）が交わるところ。 四角形の重心は、向かい合う頂点を結んだ線が交わるところ。</description></item></channel></rss>