<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Terraform on まくろぐ</title><link>https://maku.blog/tags/terraform/</link><description>Recent content in Terraform on まくろぐ</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Wed, 02 Aug 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://maku.blog/tags/terraform/index.xml" rel="self" type="application/rss+xml"/><item><title>Terraform の導入</title><link>https://maku.blog/p/tacgbjy/</link><pubDate>Wed, 02 Aug 2023 00:00:00 +0000</pubDate><guid>https://maku.blog/p/tacgbjy/</guid><description>Terraform とは Terraform は、Azure、AWS、GCP など様々なクラウドプラットフォームに対応したインフラ構築ツールです。
HCL (HashiCorp Configuration Language) という言語を使って、どのようにインフラを構築するかをコードで定義することができます (IaC: Infrastructure as Code)。 Azure や AWS などの個々のサービスと通信する機能は、プロバイダー と呼ばれる Terraform のプラグインとして提供されており、何千ものプロバイダーが Terraform Registry で公開されています。 適切なプロバイダーが見つからなければ、Golang（Go 言語）で自作することも可能です。
インストール Terraform の CLI ツール（terraform コマンド）は、下記公式サイトの手順に従って簡単にインストールできます。
Install | Terraform | HashiCorp Developer 各 OS のパッケージマネージャー（macOS の brew など）でインストールするのが手っ取り早いですが、1 バイナリーで提供されているので、バイナリ―をダウンロードして適当なディレクトリに配置する方がむしろ簡単かもしれません。 Golang 製のツールは、1 バイナリ―で提供されていているのでよいですね。
次のように terraform コマンドを実行できるようになれば OK です。
$ terraform -version Terraform v1.5.4 on windows_amd64 Terraform コード (main.tf) の作成 ここでは、Terraform によるリソース作成の Hello World として、AWS の S3 バケットを作成してみます。 EC2 インスタンスを作成する例などがよくありますが、消し忘れが怖いので S3 バケットにしておきます。 前提条件として、AWS CLI（aws コマンド）の実行が可能になっているものとします（参考: AWS の初期設定: AWS CLI と認証情報の設定。</description></item></channel></rss>