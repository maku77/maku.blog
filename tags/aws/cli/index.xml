<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>AWS/CLI on まくろぐ</title><link>https://maku.blog/tags/aws/cli/</link><description>Recent content in AWS/CLI on まくろぐ</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><atom:link href="https://maku.blog/tags/aws/cli/index.xml" rel="self" type="application/rss+xml"/><item><title>AWS の初期設定: AWS CLI と認証情報の設定</title><link>https://maku.blog/p/j5iu7it/</link><pubDate>Sun, 07 Feb 2021 00:00:00 +0000</pubDate><guid>https://maku.blog/p/j5iu7it/</guid><description>AWS CLI とは？ AWS CLI (Command Line Interface) を使うと、AWS の各種サービスをコマンドラインから操作することができます。 例えば、次のように様々な処理を実行できます。
S3 にファイルをコピーする $ aws s3 cp ローカルファイル s3://バケット名/ディレクトリ名 IAM ユーザーのアクセスキーを表示する $ aws iam list-access-keys --user-name=ユーザー名 DynamoDB にテーブルを作成する $ aws dynamodb create-table --table-name テーブル名 ... AWS の各種サービスの設定は、それぞれのマネージメントコンソール（Web サイト）上で設定することができますが、AWS CLI を使うことで、Web ブラウザを開かずに設定を済ませられます。 頻繁に行う処理などは、シェルスクリプトなどにして自動化することができます。
AWS CLI を使用するには、下記のような IAM ユーザーのアクセスキー（及びシークレットアクセスキー）が必要です。 以降の説明では、これらの情報が取得できていることを前提とします。
API 用アクセスキー（例）: INMCAKIAQX77PNSXQAGP API 用シークレットアクセスキー（例）: 2ufOA3Q2KAmpNTo2GHPDXFJK7Jiv9yfZGegIdbCW 参考リンク IAM ユーザーのアクセスキーを作成するには - AWS CLI AWS CLI のインストール インストール方法 macOS の場合 &amp;hellip; AWSCLIV2.</description></item><item><title>AWS CLI: Windows で HOME 環境変数を設定したときに credentials が見つからなくなる場合の対処</title><link>https://maku.blog/p/2td9ouj/</link><pubDate>Mon, 29 Mar 2021 00:00:00 +0000</pubDate><guid>https://maku.blog/p/2td9ouj/</guid><description>AWS CLI や AWS SDK が参照する共有認証ファイル（credentials および config）は、デフォルトでは下記のようなディレクトリになっています。
Linux の場合: ~/.aws/credentials Windows の場合: ~/%USERPROFILE%/.aws/credentials ところが、Windows を使用している場合に、環境変数 %HOME% を設定していると、CLI や SDK が %HOME%/.aws/credentials を見に行ったりして、credentials が見つからない系のエラーが出ることがあります。 一貫して %USERPROFILE% の方を見に行ってくれれればよいのですが、このあたりの振る舞いは結構ルーズなようです。
そこで、Windows のジャンクション機能 で、両方の .aws ディレクトリが同じディレクトリを指すようにしてみました。 ジャンクション生成のコマンドは、mklink /j &amp;lt;fromDir&amp;gt; &amp;lt;toDir&amp;gt; です。
ジャンクションで 2 つの .aws を同一にする C:\&amp;gt; mklink /j %HOME%\.aws %USERPROFILE%\.aws C:\home\.aws &amp;lt;&amp;lt;===&amp;gt;&amp;gt; C:\Users\maku\.aws のジャンクションが作成されました これで、%HOME%\.aws ディレクトリを参照したときの実体として、%USERPROFILE%\.aws ディレクトリが使われるようになります。 今のところ快適に動作しています。
ちなみに、ジャンクションを削除したいときは、ジャンクション元の %HOME%\.aws ディレクトリを削除するだけです。 実体の方の %USERPROFILET%\.aws は削除されないので安全です。</description></item><item><title>Amazon API Gateway をコマンドライン (CLI) から操作する</title><link>https://maku.blog/p/qwb6v89/</link><pubDate>Mon, 11 Apr 2022 00:00:00 +0000</pubDate><guid>https://maku.blog/p/qwb6v89/</guid><description>AWS CLI（コマンドラインkツール）で Amazon API Gateway を操作するには、aws apigatewayv2 コマンドを使用します。 API Gateway の作成や更新を行うためには、IAM ユーザーに適切な権限が必要ですが、AmazonAPIGatewayAdministrator 管理ポリシーを付けるとほとんどの操作が可能になります。 通常、REST API を作成する場合は、バックエンドの Lambda 関数も合わせて必要になるので、AWSLambdaFullAccess などの管理ポリシーも必要になります。
REST API を作成する (apigateway create-rest-api) リファレンス: apigateway create-rest-api
$ aws apigateway create-rest-api --name &amp;#34;My First API&amp;#34; \ --description &amp;#34;This is my first API&amp;#34; \ --region ap-northeast-1 apiKeySource: HEADER createdDate: &amp;#39;2022-04-18T15:46:00+09:00&amp;#39; description: This is my first API disableExecuteApiEndpoint: false endpointConfiguration: types: - EDGE id: mk6mj65po6 name: My First API --name オプションのみが必須です。 API の作成に成功すると、上記のように ID (mk6mj65po6) が返されます。</description></item></channel></rss>