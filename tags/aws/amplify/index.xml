<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>AWS/Amplify on まくろぐ</title><link>https://maku.blog/tags/aws/amplify/</link><description>Recent content in AWS/Amplify on まくろぐ</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><atom:link href="https://maku.blog/tags/aws/amplify/index.xml" rel="self" type="application/rss+xml"/><item><title>Amazon Cognito: Amplify SDK による認証まわりの UI 表示あれこれ</title><link>https://maku.blog/p/24p8jjx/</link><pubDate>Wed, 09 Jun 2021 00:00:00 +0000</pubDate><guid>https://maku.blog/p/24p8jjx/</guid><description>認証済みユーザーが admin グループに属しているか調べて UI を切り替える Cognito ユーザープールの「グループ」機能を使うと、既存のユーザーをグループ単位でまとめて、特別な IAM ロールを割り当てたりすることができます。 例えば、admin グループを作っておいて、そのグループに所属するユーザーに、DynamoDB の書き込み権限 (IAM role) を与える、といったことができます。
React アプリのレイヤでは、このような IAM ロールの権限うんぬんの前に、カレントユーザーがどのようなグループに所属しているかに応じて UI の表示分けをしたいことがあります。 例えば、admin グループのユーザーが Web ページを表示しているときは、管理者向けのメニュー表示をする、といったケースです。
幸い、aws-amplify モジュールの Auth オブジェクトが提供する認証情報を参照することで、認証済みのユーザーがどの Cognito グループに属しているかを調べることができます。 具体的には、Auth.currentAuthenticatedUser() などが返すユーザー情報のアクセストークンのペイロードに cognito:groups というプロパティがあり、そこに Cognito グループ名のリストが格納されています。
参考: Using the Access Token - Amazon Cognito 次のようなカスタムフック useAuthState を定義しておくと、戻り値の isAdmin プロパティを見るだけで、現在のユーザーが admin グループに属しているかを確認できます。
src/hooks/useAuthState.tsx import { useEffect, useState } from &amp;#39;react&amp;#39; import { Auth } from &amp;#39;aws-amplify&amp;#39; import { AuthState, CognitoUserInterface, onAuthUIStateChange, } from &amp;#39;@aws-amplify/ui-components&amp;#39; // ユーザーがこのグループ名の Cognito グループに所属しているときに、 // useAuthState フックが返す isAdmin プロパティを true にします。 const ADMIN_GROUP_NAME = &amp;#39;admin&amp;#39; /** useAuthState フックの戻り値の型 */ export type UseAuthStateOutput = { isSignedIn: boolean isAdmin: boolean user: CognitoUserInterface | undefined } /** 現在の認証状態を取得するためのフック関数です。 */ export const useAuthState = (): UseAuthStateOutput =&amp;gt; { // Cognito によるサインイン状態やユーザー情報を保持するステート const [authState, setAuthState] = useState&amp;lt;AuthState | undefined&amp;gt;() const [user, setUser] = useState&amp;lt;CognitoUserInterface | undefined&amp;gt;() useEffect(() =&amp;gt; { // 画面遷移時に onAuthUIStateChange が呼ばれないことへの対応 // https://github.</description></item></channel></rss>