<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>rest api on まくろぐ</title><link>https://maku.blog/tags/rest-api/</link><description>Recent content in rest api on まくろぐ</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Sun, 25 May 2014 00:00:00 +0000</lastBuildDate><atom:link href="https://maku.blog/tags/rest-api/index.xml" rel="self" type="application/rss+xml"/><item><title>Web API, REST API 設計に関するメモ</title><link>https://maku.blog/p/u54mvpk/</link><pubDate>Sun, 25 May 2014 00:00:00 +0000</pubDate><guid>https://maku.blog/p/u54mvpk/</guid><description>REST API サーバーが返すエラーコード（HTTP レスポンスコード） まずは、最低限、下記の 3 種類のステータスコードを返すように対応するとよいです。
200 &amp;hellip; OK 400 &amp;hellip; Bad Request（クライアント側の不正） 500 &amp;hellip; Internal Server Error（サーバ側の不正） その後、徐々に以下のように対応していきます。
200 &amp;hellip; OK 304 &amp;hellip; Not Modified（クライアントキャッシュへの対応〈弱いキャッシュ〉。If-Modified-Since/If-Match ヘッダへの対応） 401 &amp;hellip; Unauthorized（アクセスに認証が必要だが、まだ認証してアクセス権限を取得できていない） 403 &amp;hellip; Forbidden（そのリソースへのアクセス権限がない〈認可されていない〉） 404 &amp;hellip; Not Found（そのリソースは存在しない） 500 &amp;hellip; Internal Server Error URL にはバージョンを含める Web API の互換性がなくなることを見越して、URL のパス部分にはバージョン情報を含めておくとよいです（v2 以降で付けるという手もあり）。 次のようにパスのルート直下にバージョン情報を含めることで、シンプルな構成になります。
http://api.example.com/v1/users/ バージョン情報がインクリメントされるということは、その API がやりとりするデータに互換性がなくなることを意味します。 バージョン情報はあくまでインタフェースのバージョンを表しています。 API サーバー側の実装が少し変わったからといって、その都度バージョン情報を更新する必要はありません。</description></item></channel></rss>