<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>アジャイル on まくろぐ</title><link>https://maku.blog/tags/%E3%82%A2%E3%82%B8%E3%83%A3%E3%82%A4%E3%83%AB/</link><description>Recent content in アジャイル on まくろぐ</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Wed, 18 Jul 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://maku.blog/tags/%E3%82%A2%E3%82%B8%E3%83%A3%E3%82%A4%E3%83%AB/index.xml" rel="self" type="application/rss+xml"/><item><title>『オブジェクト開発の神髄 UML2.0を使ったアジャイルモデル駆動開発のすべて』スコット・W・アンブラー</title><link>https://maku.blog/p/9kuptdn/</link><pubDate>Wed, 18 Jul 2018 00:00:00 +0000</pubDate><guid>https://maku.blog/p/9kuptdn/</guid><description>オブジェクト開発の神髄 UML2.0を使ったアジャイルモデル駆動開発のすべて スコット・W・アンブラー 日経BP社 原題は『The Object Primer』。 スコット・アンブラーのフルライフサイクルオブジェクト指向テスト (FLOOT: Full Lifecycle Object-Oriented Testing) から、アジャイルな要求やアーキテクチャまでが、1 つにまとめられています。 実践 eXtreme プログラミングの共著者である Granville Miller は、「アジャイルになるとは、チームや自分自身に対する制約を取り払うこと」だと述べています。 本書ではその方法の神髄を学ぶことができます。
下記、重要そうなところや、個人的にビビッと来たところのメモです。
第1章: 最先端のソフトウェア開発 下記がアジャイルアライアンスのマニフェストであり、そこに集まった異なる方法論者全員に受け入れられたものである。 Individuals and interactions over processes and tools
プロセスやツールよりも個人や相互作用 すばらしいプロセスやツールは重要だが、結局は人の協力関係がすべて。 Working software over comprehensive documentation
わかりやすいドキュメントよりも動作するソフトウェア ドキュメントはシステムがなぜ、どのように構築されたか、どう使えばよいかを理解するためには重要。 Customer collaboration over contract negotiation
契約上の駆け引きよりも顧客との協調 契約は重要だが、契約を結んだからといってコミュニケーションが必要なくなるわけではない。 Responding to change over following a plan</description></item></channel></rss>