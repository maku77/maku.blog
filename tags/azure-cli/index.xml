<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Azure CLI on まくろぐ</title><link>https://maku.blog/tags/azure-cli/</link><description>Recent content in Azure CLI on まくろぐ</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Tue, 17 Mar 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://maku.blog/tags/azure-cli/index.xml" rel="self" type="application/rss+xml"/><item><title>逆引き Azure CLI: Azure CLI（az コマンド）をインストールする</title><link>https://maku.blog/p/dwsog4p/</link><pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate><guid>https://maku.blog/p/dwsog4p/</guid><description>Azure CLI をインストールすると、az コマンドを使用して、Azure の様々な機能を呼び出すことができるようになります。 Azure ポータル 上で実行できることは、ほとんど az コマンドでも実行できるようになっています。
Azure CLI は下記のサイトに従ってインストールします（インストーラを実行するだけです）。
Azure コマンドラインインターフェイス (CLI) 実際には、Azure ポータル上で実行してしまった方が手軽なことが多いのですが、スクリプトなどで処理を自動化したい場合は Azure CLI を使うことになります。</description></item><item><title>逆引き Azure CLI: Azure にログインする (az login)</title><link>https://maku.blog/p/ejar7k8/</link><pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate><guid>https://maku.blog/p/ejar7k8/</guid><description>az login コマンドを使って Azure にログインすると、Azure アカウントに紐づいた情報（サブスクリプション情報など）を取得できるようになります。
パラメータなしで実行してブラウザ上で認証することもできるし、コマンドラインからユーザ名とパスワードを指定することもできます。
ブラウザを起動して認証 $ az login ユーザー名をパラメータで指定 $ az login -u yourname@example.com Password: ******** ユーザー名とパスワードをパラメータで指定 $ az login -u yourname@example.com -p yourpass ログインが成功すると、az account show コマンドで、使用しているサブスクリプションの情報を確認できるようになります。
$ az account show { &amp;#34;environmentName&amp;#34;: &amp;#34;AzureCloud&amp;#34;, &amp;#34;homeTenantId&amp;#34;: &amp;#34;b431a0d2-3656-ed42-9497-c0dfd20ae040&amp;#34;, &amp;#34;id&amp;#34;: &amp;#34;343f3fd9-1f19-1d49-7b92-5f365bbc6fd6&amp;#34;, &amp;#34;isDefault&amp;#34;: true, &amp;#34;managedByTenants&amp;#34;: [], &amp;#34;name&amp;#34;: &amp;#34;従量課金&amp;#34;, &amp;#34;state&amp;#34;: &amp;#34;Enabled&amp;#34;, &amp;#34;tenantId&amp;#34;: &amp;#34;b431a0d2-3656-ed42-9497-c0dfd20ae040&amp;#34;, &amp;#34;user&amp;#34;: { &amp;#34;name&amp;#34;: &amp;#34;yourname@example.com&amp;#34;, &amp;#34;type&amp;#34;: &amp;#34;user&amp;#34; } }</description></item><item><title>逆引き Azure CLI: プロキシ環境下で Azure CLI (az) を使用する</title><link>https://maku.blog/p/7g9seub/</link><pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate><guid>https://maku.blog/p/7g9seub/</guid><description>会社などのプロキシ環境下において az コマンドを実行する場合は、環境変数 https_proxy を設定しておきます。
Windows の場合 C:\&amp;gt; set https_proxy=http://proxy.example.com:8080 Linux/Mac の場合 $ export https_proxy=http://proxy.example.com:8080</description></item><item><title>逆引き Azure CLI: ストレージアカウントのキーを確認する (storage account keys list)</title><link>https://maku.blog/p/3wk5vnw/</link><pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate><guid>https://maku.blog/p/3wk5vnw/</guid><description>Azure ストレージアカウントのキー（鍵）情報を取得するには、Azure にログイン した状態で、以下のように実行します。
$ az storage account keys list --account-name ストレージアカウント名 [ { &amp;#34;keyName&amp;#34;: &amp;#34;key1&amp;#34;, &amp;#34;permissions&amp;#34;: &amp;#34;Full&amp;#34;, &amp;#34;value&amp;#34;: &amp;#34;7s+V+j4CcwDNHyTvx7/UXlgKN4HvFoUuIhOuzH1YLaBWgVTWQadQB2vFjRPTAv2aoGP2mpyQcMm4C+R55o3N9g==&amp;#34; }, { &amp;#34;keyName&amp;#34;: &amp;#34;key2&amp;#34;, &amp;#34;permissions&amp;#34;: &amp;#34;Full&amp;#34;, &amp;#34;value&amp;#34;: &amp;#34;+uzKfRt3rCP7RkNBXG93lqEqD7MLvgFQmKxudWHjYbDMUeFH0VmdMhN8V/6ChCwVANi6jaDL4ZKopfwV5RjY9g==&amp;#34; } ] このストレージアカウントキーは、az storage コマンドを使って Azure ストレージ上のデータを操作するときに必要になります。
参考 BLOB ストレージにファイルをアップロードする (storage blob upload)</description></item><item><title>逆引き Azure CLI: ストレージアカウントの接続文字列を確認する (storage account show-connection-string)</title><link>https://maku.blog/p/hquhjki/</link><pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate><guid>https://maku.blog/p/hquhjki/</guid><description>Azure CLI で Azure ストレージアカウントの接続文字列（アカウント名とキーがペアになったもの）を取得するには、az storage account show-connection-string コマンドを使用します。
このコマンドを実行する前に、az login で Azure にログイン しておく必要があります。
ストレージアカウントの接続文字列を取得 $ az storage account show-connection-string --name yourstorage { &amp;#34;connectionString&amp;#34;: &amp;#34;DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;AccountName=yourstorage;AccountKey=7s+V+j4CcwDNHyTvxTAv2aoGP2mpyQcMm4C+R7/UXlgKN4HvFoUuIhOuzH1YLaBWgVTWQadQB2vFjRP55o3N9g==&amp;#34; } 参考 az storage account show-connection-string コマンド</description></item><item><title>逆引き Azure CLI: Azure ストレージの SAS トークンを生成する (storage container generate-sas)</title><link>https://maku.blog/p/n4yqdys/</link><pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate><guid>https://maku.blog/p/n4yqdys/</guid><description>Azure ストレージの操作を行うとき、有効期限付きのアクセストークンである SAS トークン が必要になることがあります。 SAS トークンは、az storage container generate-sas コマンドで生成することができます。
実際は 1 行 $ az storage container generate-sas --name &amp;lt;BLOBコンテナー名&amp;gt; --expiry &amp;#34;2020-07-07T00:00:00Z&amp;#34; --permission acdlrw --connection-string &amp;lt;ストレージアカウントの接続文字列&amp;gt; ストレージアカウントの接続文字列さえあれば、特に Azure ログインしたりせずに生成できます。 接続文字列自体を Azure CLI で取得することもできます。
SAS トークン生成時に指定するオプションの詳細は下記のコマンドリファレンスを参照してください。
参考: az storage container generate-sas コマンド 実行に成功すると、次のような文字列が標準出力に出力されます。 これが SAS トークンです。
&amp;#34;se=2020-07-07T00%3A00%3A00Z&amp;amp;sp=racwdl&amp;amp;sv=2018-11-09&amp;amp;sr=c&amp;amp;sig=c7bapOBvLkHVlebBIEQFQc2bGd%2BjmfScqKCbkLUzzoo%3D&amp;#34; この SAS トークンは、AzCopy (azcopy) ツールなどで、BLOB ストレージにファイル転送したりするときに必要になります。
SAS トークンの生成には、有効期限を示す --expiry オプションの指定が必須になっています（なくてもトークンの生成には成功しますが、使用時に認証エラーになるようです。不親切）。 ここで指定する日時のフォーマットは、少しでも間違えると出力される SAS トークンの se パラメータが無効なものになってしまうので要注意です（こちらも生成時にはエラーになりません。不親切）。
生成される SAS トークンの最後には、このトークン自体の署名がついています。 これにより、SAS トークン内の有効期限 (se) などを部分的に改ざんしたりできないようになっています。</description></item><item><title>逆引き Azure CLI: BLOB ストレージにファイルをアップロードする (storage blob upload)</title><link>https://maku.blog/p/ptx36ue/</link><pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate><guid>https://maku.blog/p/ptx36ue/</guid><description>Azure CLI を使ってストレージアカウント上に作成された、既存の BLOB コンテナにコンテンツをアップロードするには、az storage blob upload コマンドを使用します。 Azure ポータルのサイト上でポチポチやってアップロードすることもできますが、自動化のことを考えると、コマンドラインを使った方がよいでしょう。
書式 az storage blob upload --account-name &amp;lt;ストレージアカウント名&amp;gt; --account-key &amp;lt;キー&amp;gt; -c &amp;lt;コンテナ名&amp;gt; --file &amp;lt;ローカルファイル名&amp;gt; --name &amp;lt;アップロード後のファイル名&amp;gt; 実行例 $ az storage blob upload --account-name yourstorage --account-key vFjRP7s+V+j4CcwDNHyTvxT7/UXlgKN4HvFoUuIhOuzH1YLaBWgVTWQadQB2Av2aoGP2mpyQcMm4C+R55o3N9g== -c $web --file index.html --name index.html Finished[#############################################################] 100.0000% { &amp;#34;etag&amp;#34;: &amp;#34;\&amp;#34;0x8D7CA465578BC90\&amp;#34;&amp;#34;, &amp;#34;lastModified&amp;#34;: &amp;#34;2020-03-17T07:39:32+00:00&amp;#34; } アップロード時にストレージアカウントのキーを指定するので、あらかじめ az login で Azure にログインしておく必要はありません。
参考 逆引き Azure CLI: ストレージアカウントのキーを確認する (storage account keys list)</description></item></channel></rss>