<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ripgrep on まくろぐ</title><link>https://maku.blog/tags/ripgrep/</link><description>Recent content in ripgrep on まくろぐ</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Mon, 15 Sep 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://maku.blog/tags/ripgrep/index.xml" rel="self" type="application/rss+xml"/><item><title>rg (ripgrep) コマンドの使い方まとめ</title><link>https://maku.blog/p/4jhbtm3/</link><pubDate>Mon, 15 Sep 2025 00:00:00 +0000</pubDate><guid>https://maku.blog/p/4jhbtm3/</guid><description>超高速なテキスト検索コマンド rg (ripgrep) にはずっとお世話になっていますが、ちょっと凝った検索をしようとしたときに、オプションを忘れてしまうことが多いので、チートシートの形でまとめておきます。
Ripgrep チートシート rg TODO カレントディレクトリ以下ですべての「TODO」を検索します。 rg &amp;quot;^def add&amp;quot; 行頭が def add で始まる行を検索します（デフォルトで正規表現とみなされます）。 rg -F "* + *&amp;quot; 検索文字列を正規表現として解釈せず、そのままの文字列として検索します。上記の例では、* + * という文字列を検索します。 rg -i TODO 大文字・小文字を区別せずに「TODO」を検索します。 rg -w TODO 単語単位で「TODO」を検索します。例えば TODOS や MYTODO はマッチしません（安心してください、TODO: にはマッチします）。 rg -C2 TODO マッチした行の前後 2 行も一緒に表示します（-A2 -B2 と指定するのと同様）。 rg -c TODO 各ファイルごとにマッチした行数のみを表示します。 rg TODO src/main src/main ディレクトリ以下（あるいは同名のファイル）で「TODO」を検索します。 ディレクトリであることを明示したい場合は、末尾にスラッシュを付けます（src/main/）。 rg -t py TODO Python ファイル（拡張子 .py）のみを検索対象にします。 ここで指定するタイプは拡張子ではなくファイルタイプです。指定できるファイルタイプの一覧は rg --type-list で確認できます。 逆に、特定のファイルタイプを除外したい場合は -T py のように大文字の -T を使います。 例えば、ファイルタイプとして minified: *.</description></item></channel></rss>