<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Jade on まくろぐ</title><link>https://maku.blog/tags/jade/</link><description>Recent content in Jade on まくろぐ</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Mon, 30 Dec 2013 00:00:00 +0000</lastBuildDate><atom:link href="https://maku.blog/tags/jade/index.xml" rel="self" type="application/rss+xml"/><item><title>Jadeメモ: jade コマンドをインストールする</title><link>https://maku.blog/p/cfnkkhk/</link><pubDate>Sat, 28 Dec 2013 00:00:00 +0000</pubDate><guid>https://maku.blog/p/cfnkkhk/</guid><description>Jade は Node.js 製のテンプレートエンジンです。 HTML ファイルを直接記述するよりも簡潔なフォーマットで Web ページを作成することができます。
jade コマンドは Node Package Manager (npm) を使ってインストールすることができます。 下記のようにグローバルインストールすれば、どのディレクトリからでも jade コマンドを実行できるようになります。
Jade のインストール $ sudo npm install jade --global 参考サイト http://jade-lang.com/ http://jade-lang.com/reference/</description></item><item><title>Jadeメモ: jade コマンドの使い方</title><link>https://maku.blog/p/onvso3a/</link><pubDate>Mon, 30 Dec 2013 00:00:00 +0000</pubDate><guid>https://maku.blog/p/onvso3a/</guid><description>jade コマンドで HTML を生成する コマンドラインから jade コマンドを実行するには下記のようにします。 いずれの場合も index.jade ファイルの内容から HTML を生成します。
$ jade index.jade # index.html を作成 $ jade &amp;lt; index.jade # 標準出力へ HTML を出力 $ jade --pretty &amp;lt; index.jade # 改行を追加して見やすく出力 テスト 実際に index.jade というファイルから、HTML を生成してみます。
index.jade doctype html html body h1 Hello World jade コマンドの実行 $ jade &amp;lt; index.jade &amp;lt;!DOCTYPE html&amp;gt;&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;&amp;lt;h1&amp;gt;Hello World&amp;lt;/h1&amp;gt;&amp;lt;/body&amp;gt;</description></item><item><title>Jadeの構文: タブとスペースを混ぜない</title><link>https://maku.blog/p/2sdyex5/</link><pubDate>Mon, 30 Dec 2013 00:00:00 +0000</pubDate><guid>https://maku.blog/p/2sdyex5/</guid><description>Jade では、インデントとしてスペースとタブのどちらでも使用できますが、テンプレートファイル (.jade) 内では、どちらか一方に統一する必要があります。 スペースとタブが混ざっていると、変換時に Invalid indentation のエラーが発生します。
エラーになる例 $ jade test.jade /usr/local/lib/node_modules/jade/lib/runtime.js:200 throw err; ^ Error: test.jade:4 2| div 3| b Maku &amp;gt; 4| b Moja 5| 6| Invalid indentation, you can use tabs or spaces but not both</description></item><item><title>Jadeの構文: クラス属性と ID 属性を設定する</title><link>https://maku.blog/p/n6cwnk7/</link><pubDate>Mon, 30 Dec 2013 00:00:00 +0000</pubDate><guid>https://maku.blog/p/n6cwnk7/</guid><description>Jade のテンプレートファイルでは、CSS セレクタと同じ表現で、HTML タグのクラス属性、ID 属性を指定することができます。
p.class1 AAA #=&amp;gt; &amp;lt;p class=&amp;#34;class1&amp;#34;&amp;gt;AAA&amp;lt;/p&amp;gt; span#id1 BBB #=&amp;gt; &amp;lt;span id=&amp;#34;id1&amp;#34;&amp;gt;BBB&amp;lt;/span&amp;gt; もちろんクラス属性値は、複数指定可能です。
p.class1.class2.class3 AAA #=&amp;gt; &amp;lt;p class=&amp;#34;class1 class2 class3&amp;#34;&amp;gt;AAA&amp;lt;/p&amp;gt; クラス属性、ID 属性を指定するときに、タグ名を省略すると、デフォルトで div タグとみなされます。
.class1 AAA #=&amp;gt; &amp;lt;div class=&amp;#34;class1&amp;#34;&amp;gt;AAA&amp;lt;/div&amp;gt; #id1 BBB #=&amp;gt; &amp;lt;div id=&amp;#34;id1&amp;#34;&amp;gt;BBB&amp;lt;/div&amp;gt; クラス属性と ID 属性は、どちらを先に指定しても構いません。
.class1#id1.class2 #=&amp;gt; &amp;lt;div id=&amp;#34;id1&amp;#34; class=&amp;#34;class1 class2&amp;#34;&amp;gt;AAA&amp;lt;/div&amp;gt;</description></item><item><title>Jadeの構文: ブロック展開 (block expansion) によってネストを減らす</title><link>https://maku.blog/p/ef8i8dx/</link><pubDate>Sun, 29 Dec 2013 00:00:00 +0000</pubDate><guid>https://maku.blog/p/ef8i8dx/</guid><description>Jade の ブロック展開 (block expansion) を使うと、改行とインデントによるネストを一行で表現できます。 例えば、
div.box div.prompt Hello というネストされた構文は、下記のように一行で記述することができます。
div.box: div.prompt Hello ただし、以下のように、上位の要素にテキストノードが存在する場合は、ブロック展開を使った記述は行えません。
div.box Hello div.prompt World 間違い div.box Hello: div.prompt World</description></item><item><title>Jadeの構文: テキストブロックでテキストノードを生成する</title><link>https://maku.blog/p/wwao94j/</link><pubDate>Sun, 29 Dec 2013 00:00:00 +0000</pubDate><guid>https://maku.blog/p/wwao94j/</guid><description>Jade のテンプレートファイルでは、次のように要素名の後ろに続けてテキストを記述することで、要素内にテキストノードを作成 することができます。
p Hello World テキストの内容が長くなり、複数行に分けて記述したいときは、バー記法 (bar notation) やドット記法 (dot notation) を使用した「テキストブロック」 を作成します。
バー記法によるテキストブロックの例 p | long long long long long | long long long long long | long long long description. ドット記法によるテキストブロックの例 p. long long long long long long long long long long long long long description. ドットは、必ずタグ名の直後にスペースを入れずに記述 してください。 スペースを入れると、ドットがテキスト内容として認識されてしまいます。
出力 &amp;lt;p&amp;gt;long long long long long long long long long long long long long description.&amp;lt;/p&amp;gt; これらの記法は、ソースコードなど、改行やインデントが重要なテキストを pre 要素として出力する際に便利です。</description></item><item><title>Jadeの構文: CSS や JavaScript を使用する</title><link>https://maku.blog/p/d8cx8a3/</link><pubDate>Sun, 29 Dec 2013 00:00:00 +0000</pubDate><guid>https://maku.blog/p/d8cx8a3/</guid><description>Jade テンプレート内に、直接 CSS や JavaScript のコードを記述するときは、ドット記法によるテキストブロック内に記述します。
test.jade style. body { color: #111; background: #ccc; } script. var message = &amp;#39;Hello&amp;#39;; alert(message); 実行結果 $ jade --pretty &amp;lt; test.jade &amp;lt;style&amp;gt; body { color: #111; background: #ccc; } &amp;lt;/style&amp;gt; &amp;lt;script&amp;gt; var message = &amp;#39;Hello&amp;#39;; alert(message); &amp;lt;/script&amp;gt; link タグや script タグによって、外部の CSS や JavaScript コードをロードするには、以下のようにします。
test.jade doctype html html head meta(charset=&amp;#39;UTF-8&amp;#39;) link(rel=&amp;#39;stylesheet&amp;#39;, href=&amp;#39;main.css&amp;#39;) title Hello script(src=&amp;#39;jquery.js&amp;#39;) script(src=&amp;#39;main.js&amp;#39;) body p Hello 実行結果 $ jade --pretty &amp;lt; test.</description></item></channel></rss>