<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>D3.js on まくろぐ</title><link>https://maku.blog/tags/d3js/</link><description>Recent content in D3.js on まくろぐ</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Thu, 30 Nov 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://maku.blog/tags/d3js/index.xml" rel="self" type="application/rss+xml"/><item><title>D3.js で円グラフを描画する (d3.pie)</title><link>https://maku.blog/p/v3g55wz/</link><pubDate>Thu, 30 Nov 2023 00:00:00 +0000</pubDate><guid>https://maku.blog/p/v3g55wz/</guid><description>D3.js を使って円グラフを描画するには、d3.pie() と d3.arc() を組み合わせて使用します。
d3.pie() 関数で扇形の角度を計算する D3.js の d3.pie() 関数を使うと、円グラフ (pie chart) やドーナツチャート (donut chart) を描画するための角度を計算する関数オブジェクトを生成できます。 生成した関数にデータ配列を渡すと、各データに対応する扇形部分の開始角度 (startAngle) と終了角度 (endAngle) を計算してくれます。 角度はラジアンで表現されるので、180° は 3.1415 になります。
const data = [5, 3, 2] const pie = d3.pie() // pie 関数の生成 const arcs = pie(data) // データ配列から角度情報を求める console.log(args); [ { &amp;#34;data&amp;#34;: 5, &amp;#34;index&amp;#34;: 0, &amp;#34;value&amp;#34;: 5, &amp;#34;startAngle&amp;#34;: 0, &amp;#34;endAngle&amp;#34;: 3.141592653589793, &amp;#34;padAngle&amp;#34;: 0 }, { &amp;#34;data&amp;#34;: 3, &amp;#34;index&amp;#34;: 1, &amp;#34;value&amp;#34;: 3, &amp;#34;startAngle&amp;#34;: 3.141592653589793, &amp;#34;endAngle&amp;#34;: 5.</description></item></channel></rss>