<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Azure Storage on まくろぐ</title><link>https://maku.blog/tags/azure-storage/</link><description>Recent content in Azure Storage on まくろぐ</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Tue, 17 Mar 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://maku.blog/tags/azure-storage/index.xml" rel="self" type="application/rss+xml"/><item><title>Azure のストレージアカウントを作成する</title><link>https://maku.blog/p/7axgzfu/</link><pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate><guid>https://maku.blog/p/7axgzfu/</guid><description>Table Storage などのストレージ系サービスを使用するには、Azure ポータル から ストレージアカウント を作成しておく必要があります。 このトレージアカウントは Table Storage 専用ではなく、様々なストレージサービス（BLOB、ファイル、キュー、テーブル）をまとめて扱うものです。
ストレージアカウント → 作成 のような感じで進めば作成用の画面が開くので、ストレージアカウント名などを入力します。 ストレージアカウント名は、Azure 内で一意（要するに世界中で一意）な名前を付ける必要があります。
選択項目によっては、料金が変わってくるものがあるので、情報アイコンの説明を見ながら、安いプランを選択していきます。 例えば、Table Storage のレプリケーションの種類別価格は次のようになっています（こちらから抜粋）。
図: Table Storage の月額 入力が終わったら、作成 のボタンを押して、しばらく待てばストレージアカウントが作成されます（1分くらいかかります）。</description></item><item><title>Azure Storage で静的 Web サイトをホスティングする</title><link>https://maku.blog/p/gkardu9/</link><pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate><guid>https://maku.blog/p/gkardu9/</guid><description>（Azure Storage による静的な Web サイトのホスティング機能は 2018 年末にリリース されました）
ストレージアカウントを作成する（まだ作成していない場合） Azure 上に静的な Web サイトをホスティングするためのストレージを作成するには、ストレージアカウントが必要です。 まだ作成していない場合は、下記の手順に従ってストレージアカウントを作成してください。 静的な Web サイトをホスティングする場合は、アカウントの種類 (Account kind) の項目で StorageV2（汎用v2） というのを選んで作成しておく必要があります。
→ Azure のストレージアカウントを作成する
静的な Web サイトを有効にする ストレージアカウントを作成したら、コンテンツのアップロード先である Azure ストレージコンテナーと、Web サイトの URL を生成します。 といっても、ストレージアカウントがあれば、Azure ポータル から数秒で自動作成できます。
ストレージアカウントのページを開き、設定 → 静的な Web サイト を選択します。 静的な Web サイト のスイッチを 有効 に切り替えて 保存 ボタンを押します。 これで、Web サイトをホスティングするための Azure ストレージコンテナー（BLOB を入れるコンテナー）が作成されます。 コンテナー名は自動的に $web になるようです。
同時に、Web サイトの URL も自動的に生成されます。
これが Web ブラウザからサイトにアクセスするときのアドレスになります。 あとは、コンテナーに HTML ファイルをアップロードするだけです。
Web サイトのコンテンツをアップロードする 作成されたコンテナー ($web) にコンテンツをアップロードするには、Azure CLI などのコマンドラインツールを使用します。 Azure ポータルのサイト上で BLOB リソースの項目からポチポチやってアップロードすることもできますが、自動化のことを考えると、コマンドラインツールを使った方がよいでしょう。</description></item><item><title>逆引き Azure CLI: ストレージアカウントのキーを確認する (storage account keys list)</title><link>https://maku.blog/p/3wk5vnw/</link><pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate><guid>https://maku.blog/p/3wk5vnw/</guid><description>Azure ストレージアカウントのキー（鍵）情報を取得するには、Azure にログイン した状態で、以下のように実行します。
$ az storage account keys list --account-name ストレージアカウント名 [ { &amp;#34;keyName&amp;#34;: &amp;#34;key1&amp;#34;, &amp;#34;permissions&amp;#34;: &amp;#34;Full&amp;#34;, &amp;#34;value&amp;#34;: &amp;#34;7s+V+j4CcwDNHyTvx7/UXlgKN4HvFoUuIhOuzH1YLaBWgVTWQadQB2vFjRPTAv2aoGP2mpyQcMm4C+R55o3N9g==&amp;#34; }, { &amp;#34;keyName&amp;#34;: &amp;#34;key2&amp;#34;, &amp;#34;permissions&amp;#34;: &amp;#34;Full&amp;#34;, &amp;#34;value&amp;#34;: &amp;#34;+uzKfRt3rCP7RkNBXG93lqEqD7MLvgFQmKxudWHjYbDMUeFH0VmdMhN8V/6ChCwVANi6jaDL4ZKopfwV5RjY9g==&amp;#34; } ] このストレージアカウントキーは、az storage コマンドを使って Azure ストレージ上のデータを操作するときに必要になります。
参考 BLOB ストレージにファイルをアップロードする (storage blob upload)</description></item><item><title>逆引き Azure CLI: ストレージアカウントの接続文字列を確認する (storage account show-connection-string)</title><link>https://maku.blog/p/hquhjki/</link><pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate><guid>https://maku.blog/p/hquhjki/</guid><description>Azure CLI で Azure ストレージアカウントの接続文字列（アカウント名とキーがペアになったもの）を取得するには、az storage account show-connection-string コマンドを使用します。
このコマンドを実行する前に、az login で Azure にログイン しておく必要があります。
ストレージアカウントの接続文字列を取得 $ az storage account show-connection-string --name yourstorage { &amp;#34;connectionString&amp;#34;: &amp;#34;DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;AccountName=yourstorage;AccountKey=7s+V+j4CcwDNHyTvxTAv2aoGP2mpyQcMm4C+R7/UXlgKN4HvFoUuIhOuzH1YLaBWgVTWQadQB2vFjRP55o3N9g==&amp;#34; } 参考 az storage account show-connection-string コマンド</description></item><item><title>逆引き Azure CLI: Azure ストレージの SAS トークンを生成する (storage container generate-sas)</title><link>https://maku.blog/p/n4yqdys/</link><pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate><guid>https://maku.blog/p/n4yqdys/</guid><description>Azure ストレージの操作を行うとき、有効期限付きのアクセストークンである SAS トークン が必要になることがあります。 SAS トークンは、az storage container generate-sas コマンドで生成することができます。
実際は 1 行 $ az storage container generate-sas --name &amp;lt;BLOBコンテナー名&amp;gt; --expiry &amp;#34;2020-07-07T00:00:00Z&amp;#34; --permission acdlrw --connection-string &amp;lt;ストレージアカウントの接続文字列&amp;gt; ストレージアカウントの接続文字列さえあれば、特に Azure ログインしたりせずに生成できます。 接続文字列自体を Azure CLI で取得することもできます。
SAS トークン生成時に指定するオプションの詳細は下記のコマンドリファレンスを参照してください。
参考: az storage container generate-sas コマンド 実行に成功すると、次のような文字列が標準出力に出力されます。 これが SAS トークンです。
&amp;#34;se=2020-07-07T00%3A00%3A00Z&amp;amp;sp=racwdl&amp;amp;sv=2018-11-09&amp;amp;sr=c&amp;amp;sig=c7bapOBvLkHVlebBIEQFQc2bGd%2BjmfScqKCbkLUzzoo%3D&amp;#34; この SAS トークンは、AzCopy (azcopy) ツールなどで、BLOB ストレージにファイル転送したりするときに必要になります。
SAS トークンの生成には、有効期限を示す --expiry オプションの指定が必須になっています（なくてもトークンの生成には成功しますが、使用時に認証エラーになるようです。不親切）。 ここで指定する日時のフォーマットは、少しでも間違えると出力される SAS トークンの se パラメータが無効なものになってしまうので要注意です（こちらも生成時にはエラーになりません。不親切）。
生成される SAS トークンの最後には、このトークン自体の署名がついています。 これにより、SAS トークン内の有効期限 (se) などを部分的に改ざんしたりできないようになっています。</description></item><item><title>逆引き Azure CLI: BLOB ストレージにファイルをアップロードする (storage blob upload)</title><link>https://maku.blog/p/ptx36ue/</link><pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate><guid>https://maku.blog/p/ptx36ue/</guid><description>Azure CLI を使ってストレージアカウント上に作成された、既存の BLOB コンテナにコンテンツをアップロードするには、az storage blob upload コマンドを使用します。 Azure ポータルのサイト上でポチポチやってアップロードすることもできますが、自動化のことを考えると、コマンドラインを使った方がよいでしょう。
書式 az storage blob upload --account-name &amp;lt;ストレージアカウント名&amp;gt; --account-key &amp;lt;キー&amp;gt; -c &amp;lt;コンテナ名&amp;gt; --file &amp;lt;ローカルファイル名&amp;gt; --name &amp;lt;アップロード後のファイル名&amp;gt; 実行例 $ az storage blob upload --account-name yourstorage --account-key vFjRP7s+V+j4CcwDNHyTvxT7/UXlgKN4HvFoUuIhOuzH1YLaBWgVTWQadQB2Av2aoGP2mpyQcMm4C+R55o3N9g== -c $web --file index.html --name index.html Finished[#############################################################] 100.0000% { &amp;#34;etag&amp;#34;: &amp;#34;\&amp;#34;0x8D7CA465578BC90\&amp;#34;&amp;#34;, &amp;#34;lastModified&amp;#34;: &amp;#34;2020-03-17T07:39:32+00:00&amp;#34; } アップロード時にストレージアカウントのキーを指定するので、あらかじめ az login で Azure にログインしておく必要はありません。
参考 逆引き Azure CLI: ストレージアカウントのキーを確認する (storage account keys list)</description></item></channel></rss>