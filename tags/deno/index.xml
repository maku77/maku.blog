<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Deno on まくろぐ</title><link>https://maku.blog/tags/deno/</link><description>Recent content in Deno on まくろぐ</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Wed, 21 Dec 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://maku.blog/tags/deno/index.xml" rel="self" type="application/rss+xml"/><item><title>Deno プログラミングをはじめる</title><link>https://maku.blog/p/d8s6fpz/</link><pubDate>Mon, 12 Dec 2022 00:00:00 +0000</pubDate><guid>https://maku.blog/p/d8s6fpz/</guid><description>Deno とは？ Deno（発音: ディーノ）は、Node.js の作者であるライアン・ダール (Ryan Dahl) 氏が作成した JavaScript/TypeScript の実行環境です。 Deno という名前は、Node を逆にしたネーミングになっています。 Node.js での反省を活かした改善が行われており、今後は Node.js ではなく Deno で作成されるアプリケーションが増えていくと思われます。 Deno には次のような特徴があります。
シンプルな 1 つの実行ファイル（deno コマンド）で提供 ネイティブに TypeScript 実行をサポート（tsc コマンドのインストールが不要） ゼロコンフィグで開発を始められる（必要に応じて deno.json を用意することも可能） package.json で依存モジュールを管理する必要がない 各種開発ツールを deno サブコマンドで標準搭載 deno fmt &amp;hellip; フォーマッター deno lint &amp;hellip; Lint ツール deno test &amp;hellip; テストランナー deno bundle &amp;hellip; バンドラー（1 つの JS や実行ファイルにまとめる） クロスプラットフォームな deno task（Node の npm run に相当） Promise ベースの API 実装 Rust 実装による高速動作（当初は Golang 実装だった） npm モジュールのサポート（2022 年に追加） 公式のサーバレス環境 Deno Deploy が提供されている Node.</description></item><item><title>Node.js と Deno のコーディング方法の違いまとめ</title><link>https://maku.blog/p/zbaga2z/</link><pubDate>Wed, 21 Dec 2022 00:00:00 +0000</pubDate><guid>https://maku.blog/p/zbaga2z/</guid><description>Deno でのコーディングは、Node.js とほぼ同様の書き方で行えますが、いくつか押さえておきたいポイントがあるのでまとめておきます。
Web ブラウザーで使える JavaScript の標準 API、例えば fetch API や、それに付随する Request や Response インタフェースをデフォルトで使用することができます。 JavaScript 標準ではない API は、Deno.xxx という形の静的メソッド／プロパティで提供されています。Deno が提供している API ということが分かりやすいです。下記は、コマンドライン引数を参照するときの例です。 Deno の場合: Deno.argv[0] Node の場合: process.argv[0] npm モジュールは、npm specifier というフォーマット (npm:xxx) でインポート可能です。さらに、型定義が DefinitelyTyped で提供されている場合は、コメントで @deno-types ディレクティブを使って指定できます。 // @deno-types=&amp;#34;npm:@types/express@^4.17&amp;#34;; import express from &amp;#34;npm:express@^4.17&amp;#34;; const app = express(); npm モジュールのインポート方法として、esm.sh や Skypack CDN といった CDN を利用する方法もあります。 import React from &amp;#34;https://esm.sh/react@~16.13.0&amp;#34;; import React from &amp;#34;https://cdn.skypack.dev/react@~16.13.0&amp;#34;; Deno 用のモジュールは deno.</description></item></channel></rss>