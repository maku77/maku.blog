<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>バッチファイル on まくろぐ</title><link>https://maku.blog/tags/%E3%83%90%E3%83%83%E3%83%81%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB/</link><description>Recent content in バッチファイル on まくろぐ</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Wed, 18 Mar 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://maku.blog/tags/%E3%83%90%E3%83%83%E3%83%81%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB/index.xml" rel="self" type="application/rss+xml"/><item><title>PowerShell: バッチファイルから PowerShell を呼び出して結果を変数に格納する</title><link>https://maku.blog/p/372dx46/</link><pubDate>Wed, 18 Mar 2020 00:00:00 +0000</pubDate><guid>https://maku.blog/p/372dx46/</guid><description>Linux や mac では、外部コマンドをバッククォート () で囲んでやるだけで実行結果を取得できますが、バッチファイルで同じようなことをするには FOR /F` コマンドを使用します。 本来は、コマンドの出力結果を一行ずつ処理するためのコマンドですが、次のようにすれば、コマンドの実行結果を一行だけ変数に格納できます。
FOR /F &amp;#34;usebackq delims=&amp;#34; %%A IN (`外部コマンド`) DO set 変数名=%%A FOR ループのパラメータの意味 /F: コマンドの出力結果をループ処理する usebackq: バッククォートで囲まれた文字列全体を外部コマンドとみなす delims=: コマンド実行結果にスペースが含まれていても分割せずに取得（ここではデリミタ文字をなくしている） 上記の 外部コマンド のところで、powershell コマンドを実行すれば、PowerShell で実行した結果をバッチファイル内の変数で受け取ることができます。
例えば、次のバッチファイル (next-month.bat) では、1か月後の日時を PowerShell で求めて、その結果をバッチファイル内の next_month 変数に取得しています。
next-month.bat @echo off setlocal FOR /F &amp;#34;usebackq delims=&amp;#34; %%A IN (`powershell &amp;#34;(Get-Date).AddMonths(1).ToString(&amp;#39;yyyy-MM-dd&amp;#39;)&amp;#34;`) DO set next_month=%%A echo %next_month% 次のように PowerShell で実行するコマンドを分離しておくと見やすいかもしれません。 ps_command 変数の内容を置き換えるだけで、別のコマンドに対応できます。
set ps_command=`powershell &amp;#34;(Get-Date).AddMonths(1).ToString(&amp;#39;yyyy-MM-dd&amp;#39;)&amp;#34;` FOR /F &amp;#34;usebackq delims=&amp;#34; %%A IN (%ps_command%) DO set result=%%A echo %result% 実行結果 C:\&amp;gt; next-month 2020-04-19</description></item></channel></rss>