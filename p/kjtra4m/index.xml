<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Claude on まくろぐ</title><link>https://maku.blog/p/kjtra4m/</link><description>Recent content in Claude on まくろぐ</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Thu, 31 Jul 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://maku.blog/p/kjtra4m/index.xml" rel="self" type="application/rss+xml"/><item><title>Claude Code のカスタムコマンドを Git や Dropbox で共有する</title><link>https://maku.blog/p/xpwvvfz/</link><pubDate>Thu, 31 Jul 2025 00:00:00 +0000</pubDate><guid>https://maku.blog/p/xpwvvfz/</guid><description>何をするか？ プロジェクトに依存しない汎用的な Claude Code カスタムスラッシュコマンドは、~/.claude/commands ディレクトリ以下に *.md ファイルを作成することで定義できます。 よく使うプロンプトをカスタムコマンドとして登録しておくと、どのディレクトリからでも呼び出せるのでとても便利です。 ただし、これらの設定ファイルはユーザーのホームディレクトリ以下で管理されるため、複数の PC で同じ設定を使いたい場合は、通常は手動でコピーする必要があります。
ここでは、Windows のジャンクションや macOS/Linux のシンボリックリンク を使って、~/.claude 以下のディレクトリを GitHub や Dropbox で管理しているディレクトリにリンクさせる方法を説明します。 こうすることで、複数の PC で Claude Code の設定を簡単に共有できるようになります。 この方法は、特にチームメンバーと汎用的なカスタムコマンドを共有したい場合に便利です。
共有する Claude Code の設定ファイルを用意する Claude Code の設定ファイルを claude-config という Git リポジトリで管理することにします（もっと手軽に Dropbox などで管理してもよいです）。 まず、テスト用に下記のような hello.md カスタムコマンドを用意します。
~/gitwork/claude-config/commands/hello.md --- description: 簡単な挨拶コマンド --- 「てすと、てすと」とだけ出力してください。 このカスタムコマンドを複数の PC で共有できるようにします。
~/.claude 以下からリンクする 上記で作成した Claude Code 用の設定ファイル（カスタムコマンド）を、各 PC の ~/.claude/commands 以下からリンクします。 .md ファイルを 1 つずつリンクしていくのは大変なので、ディレクトリ単位でリンクしてしまうのがよいです。 ここでは、~/.claude/commands/maku というディレクトリを、~/gitwork/claude-config/commands ディレクトリにリンクすることにします。 maku という名前は適当に付けましたが、ここは任意の名前でよいです。 例えば、チーム名やプロジェクト名などにしておくと分かりやすいと思います。</description></item><item><title>Claude Code を辞書にするスラッシュコマンドを定義する (/m-en, /m-ja)</title><link>https://maku.blog/p/52v9k2v/</link><pubDate>Sun, 13 Jul 2025 00:00:00 +0000</pubDate><guid>https://maku.blog/p/52v9k2v/</guid><description>Claude Code では、よく使うプロンプトを独自のスラッシュコマンドとして定義しておくことができます。 ここでは、/m-en と /m-ja というスラッシュコマンドを定義して、英語と日本語の翻訳機として使う方法を紹介します。
☝️ m- というプレフィックス 個人的なコマンドを定義するときは、いつも m- というプレフィックスを付けるようにしています。 こうすると、m- とタイプするだけで、自分で定義したコマンドを一覧表示できるので便利です。 みなさんは、このようなプレフィックスを付けずに、/en や /ja という名前でスラッシュコマンドを定義しても大丈夫です。 スラッシュコマンドは、下記のようにホームディレクトリ以下に .md ファイルを作成することで定義できます。 この例では英語で記述していますが、日本語で記述しても大丈夫です。
~/.claude/commands/m-en.md（英語への翻訳） --- description: Translate text to English --- Please translate the following text to English with natural, appropriate English expressions: ``` $ARGUMENTS ``` ### Output Rules - If the input argument is one or two words, please display the following: - Three English translation results (English word or phrase) with english pronunciation (e.</description></item></channel></rss>