<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>AWS CLI 関連記事 on まくろぐ</title><link>https://maku.blog/p/vigdnzf/</link><description>Recent content in AWS CLI 関連記事 on まくろぐ</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Mon, 29 Mar 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://maku.blog/p/vigdnzf/index.xml" rel="self" type="application/rss+xml"/><item><title>AWS の初期設定: AWS CLI と認証情報の設定</title><link>https://maku.blog/p/j5iu7it/</link><pubDate>Sun, 07 Feb 2021 00:00:00 +0000</pubDate><guid>https://maku.blog/p/j5iu7it/</guid><description>AWS CLI とは？ AWS CLI (Command Line Interface) を使うと、AWS の各種サービスをコマンドラインから操作することができます。 例えば、次のように様々な処理を実行できます。
S3 にファイルをコピーする $ aws s3 cp ローカルファイル s3://バケット名/ディレクトリ名 IAM ユーザーのアクセスキーを表示する $ aws iam list-access-keys --user-name=ユーザー名 DynamoDB にテーブルを作成する $ aws dynamodb create-table --table-name テーブル名 ... AWS の各種サービスの設定は、それぞれのマネージメントコンソール（Web サイト）上で設定することができますが、AWS CLI を使うことで、Web ブラウザを開かずに設定を済ませられます。 頻繁に行う処理などは、シェルスクリプトなどにして自動化することができます。
AWS CLI を使用するには、下記のような IAM ユーザーのアクセスキー（及びシークレットアクセスキー）が必要です。 以降の説明では、これらの情報が取得できていることを前提とします。
API 用アクセスキー（例）: INMCAKIAQX77PNSXQAGP API 用シークレットアクセスキー（例）: 2ufOA3Q2KAmpNTo2GHPDXFJK7Jiv9yfZGegIdbCW 参考リンク IAM ユーザーのアクセスキーを作成するには - AWS CLI AWS CLI のインストール インストール方法 macOS の場合 &amp;hellip; AWSCLIV2.</description></item><item><title>AWS CLI: Windows で HOME 環境変数を設定したときに credentials が見つからなくなる場合の対処</title><link>https://maku.blog/p/2td9ouj/</link><pubDate>Mon, 29 Mar 2021 00:00:00 +0000</pubDate><guid>https://maku.blog/p/2td9ouj/</guid><description>AWS CLI や AWS SDK が参照する共有認証ファイル（credentials および config）は、デフォルトでは下記のようなディレクトリになっています。
Linux の場合: ~/.aws/credentials Windows の場合: ~/%USERPROFILE%/.aws/credentials ところが、Windows を使用している場合に、環境変数 %HOME% を設定していると、CLI や SDK が %HOME%/.aws/credentials を見に行ったりして、credentials が見つからない系のエラーが出ることがあります。 一貫して %USERPROFILE% の方を見に行ってくれれればよいのですが、このあたりの振る舞いは結構ルーズなようです。
そこで、Windows のジャンクション機能 で、両方の .aws ディレクトリが同じディレクトリを指すようにしてみました。 ジャンクション生成のコマンドは、mklink /j &amp;lt;fromDir&amp;gt; &amp;lt;toDir&amp;gt; です。
ジャンクションで 2 つの .aws を同一にする C:\&amp;gt; mklink /j %HOME%\.aws %USERPROFILE%\.aws C:\home\.aws &amp;lt;&amp;lt;===&amp;gt;&amp;gt; C:\Users\maku\.aws のジャンクションが作成されました これで、%HOME%\.aws ディレクトリを参照したときの実体として、%USERPROFILE%\.aws ディレクトリが使われるようになります。 今のところ快適に動作しています。
ちなみに、ジャンクションを削除したいときは、ジャンクション元の %HOME%\.aws ディレクトリを削除するだけです。 実体の方の %USERPROFILET%\.aws は削除されないので安全です。</description></item><item><title>AWS のコスト情報をコマンドライン (CLI) で取得する</title><link>https://maku.blog/p/ct4ckt3/</link><pubDate>Tue, 23 Feb 2021 00:00:00 +0000</pubDate><guid>https://maku.blog/p/ct4ckt3/</guid><description>aws ce get-cost-and-usage ... 次の例では、指定した期間の AWS 利用料金を求めています。
aws ce get-cost-and-usage \ --granularity MONTHLY \ --time-period Start=2021-01-01,End=2021-02-01 \ --metrics BlendedCost 実行結果 DimensionValueAttributes:[]ResultsByTime:- Estimated:falseGroups:[]TimePeriod:End:&amp;#39;2021-02-01&amp;#39;Start:&amp;#39;2021-01-01&amp;#39;Total:BlendedCost:Amount:&amp;#39;0.0900932477&amp;#39;Unit:USD 次の例では、サービスごとに料金表示しています。
aws ce get-cost-and-usage \ --granularity MONTHLY \ --time-period Start=2021-01-01,End=2021-02-01 \ --metrics BlendedCost \ --group-by Type=DIMENSION,Key=SERVICE 実行結果 DimensionValueAttributes:[]GroupDefinitions:- Key:SERVICEType:DIMENSIONResultsByTime:- Estimated:falseGroups:- Keys:- AWS CloudShellMetrics:BlendedCost:Amount:&amp;#39;0.0000032477&amp;#39;Unit:USD- Keys:- AWS CodeCommitMetrics:BlendedCost:Amount:&amp;#39;0&amp;#39;Unit:USD- Keys:- AWS Key Management ServiceMetrics:BlendedCost:Amount:&amp;#39;0&amp;#39;Unit:USD- Keys:- AWS LambdaMetrics:BlendedCost:Amount:&amp;#39;0&amp;#39;Unit:USD- Keys:- Amazon Simple Notification ServiceMetrics:BlendedCost:Amount:&amp;#39;0&amp;#39;Unit:USD- Keys:- Amazon Simple Storage ServiceMetrics:BlendedCost:Amount:&amp;#39;0.</description></item></channel></rss>