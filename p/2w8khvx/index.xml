<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>AppleScriptメモ on まくろぐ</title><link>https://maku.blog/p/2w8khvx/</link><description>Recent content in AppleScriptメモ on まくろぐ</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Sun, 18 Feb 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://maku.blog/p/2w8khvx/index.xml" rel="self" type="application/rss+xml"/><item><title>Macメモ: AppleScript を実行する</title><link>https://maku.blog/p/6je96q9/</link><pubDate>Sun, 18 Feb 2018 00:00:00 +0000</pubDate><guid>https://maku.blog/p/6je96q9/</guid><description>macOS の AppleScript を使用すると、実行したい一連の処理をスクリプト化することができます。 Windows のバッチファイルのようなものです。 AppleScript を実行するには、osascript コマンドを使用します。
ワンライナーで実行する 次のようにして、-e オプションで実行する処理を直接記述することができます。
例: ダイアログでメッセージを表示する $ osascript -e &amp;#39;display dialog &amp;#34;Hello&amp;#34;&amp;#39; スクリプトファイルを実行する 長いスクリプトを作成するときは、次のようにスクリプトファイルとして保存しておくのがよいでしょう。
sample.osa（スクリプトファイル） #!/usr/bin/env osascript display dialog &amp;#34;Hello&amp;#34; スクリプトファイルを実行するときは、ファイル名をそのままパラメーターとして指定します。
$ osascript sample.osa 上記のスクリプト例のように 1 行目にシェバング (#!) を記述した上で実行権限を付けておけば、そのまま実行ファイルとして実行することができます。
$ chmod +x sample.osa $ ./sample.osa</description></item><item><title>Macメモ: AppleScript でコメントを記述する</title><link>https://maku.blog/p/h3zmh7k/</link><pubDate>Sun, 18 Feb 2018 00:00:00 +0000</pubDate><guid>https://maku.blog/p/h3zmh7k/</guid><description>AppleScript にも C++ や Java のように、行コメントとブロックコメントのための構文が用意されています。
行コメント -- コメント -- 以降に記述したテキストは、行末までコメントとみなされ実行時に無視されます。
ブロックコメント (* コメント コメント -- 行コメントをネストすることもできます (* ブロックコメントをネストすることもできます *) *) 複数行に渡るコメントを記述したいときは、(* と *) で囲みます。 Java や C/C++ とは異なり、ブロックコメントの中にブロックコメントを入れ子で含めることができます。</description></item><item><title>Macメモ: AppleScript でターミナルを操作する</title><link>https://maku.blog/p/dgde4df/</link><pubDate>Sun, 18 Feb 2018 00:00:00 +0000</pubDate><guid>https://maku.blog/p/dgde4df/</guid><description>新規ターミナルウィンドウを開く macOS で次のシェルスクリプトを実行すると、新しいターミナルを起動してそのターミナルをアクティブにすることができます。
#!/usr/bin/env osascript tell application &amp;#34;Terminal&amp;#34; do script activate end tell 上記はスクリプトファイルにする例ですが、次のように、ワンライナーで osascript コマンドを実行することもできます。
$ osascript -e &amp;#39;tell application &amp;#34;Terminal&amp;#34; to do script&amp;#39; 新規に開いたターミナル上で任意のシェルコマンドを実行するには、do script のパラメータでコマンドを指定します。 次の例では、単純な echo コマンドを実行しています。
tell application &amp;#34;Terminal&amp;#34; do script &amp;#34;echo Hello&amp;#34; activate end tell さらに、次のようにすれば、新規ターミナルのタイトルを設定することができます。
tell application &amp;#34;Terminal&amp;#34; do script activate set currWin to index of first window tell window currWin set custom title of first tab to &amp;#34;カスタムタイトル&amp;#34; end tell end tell ターミナルのテーマを変更することもできます。</description></item><item><title>Macメモ: AppleScript でボタンによる選択肢を表示する</title><link>https://maku.blog/p/g4cq4uh/</link><pubDate>Sun, 18 Feb 2018 00:00:00 +0000</pubDate><guid>https://maku.blog/p/g4cq4uh/</guid><description>下記のサンプルでは、"Windows" "Mac" "Cancel" の３つのボタンを表示し、押したボタンによって異なるメッセージを表示します。
#!/usr/bin/env osascript display dialog &amp;#34;Select your OS&amp;#34; buttons {&amp;#34;Mac&amp;#34;, &amp;#34;Windows&amp;#34;, &amp;#34;Cancel&amp;#34;} default button 3 with icon note copy the result as list to {ret} if the ret is &amp;#34;Windows&amp;#34; then display dialog &amp;#34;You are using Windows!&amp;#34; else if the ret is &amp;#34;Mac&amp;#34; then display dialog &amp;#34;You are using Mac!&amp;#34; end if</description></item><item><title>Macメモ: AppleScript で変数を定義する</title><link>https://maku.blog/p/zpg5wns/</link><pubDate>Sun, 18 Feb 2018 00:00:00 +0000</pubDate><guid>https://maku.blog/p/zpg5wns/</guid><description>AppleScript で変数に値を代入するには、set あるいは copy を使用します。
次の例では、set を使って、変数 user に文字列 &amp;quot;Maku&amp;quot; を代入しています。
set user to &amp;#34;Maku&amp;#34; display dialog &amp;#34;Hello &amp;#34; &amp;amp; user set の代わりに、copy を使用することもできます。
copy 33 to myAge</description></item></channel></rss>