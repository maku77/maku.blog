<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>AWS のトラブルシューティング on まくろぐ</title><link>https://maku.blog/p/szcbzgt/</link><description>Recent content in AWS のトラブルシューティング on まくろぐ</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Mon, 26 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://maku.blog/p/szcbzgt/index.xml" rel="self" type="application/rss+xml"/><item><title>AWS CLI でアクセスできるのに AWS SDK で Access Denied (403) になるとき</title><link>https://maku.blog/p/7tds7bw/</link><pubDate>Mon, 26 Apr 2021 00:00:00 +0000</pubDate><guid>https://maku.blog/p/7tds7bw/</guid><description>認証情報の食い違いを調べる 例えば、ローカルで AWS CLI を使って S3 の情報にアクセスできているのに、AWS SDK 使った Node.js プログラムで S3 にアクセスしたときに Access Denied (403) になるときは、異なる認証情報 (credentials) を使ってアクセスしている可能性 があります。
AWS CLI が、どのようなユーザーでアクセスしているかは、下記のようにして確認できます。
$ aws sts get-caller-identity Account: &amp;#39;123456789012&amp;#39; Arn: arn:aws:sts::123456789012:assumed-role/MyDeveloperRole/botocore-session-9876543210 UserId: A6B3EVWX58AR9AVTXAP5T:botocore-session-9876543210 次に、Node.js のプログラムなどで、AWS SDK を使って上記と同様の情報を取得します。 Node.js 用の SDK ver.2 では、AWS.STS.getCallerIdentity()、SDK ver.3 では STSClient.send() を使います。
参考: AWS.STS.getCallerIdentity() - AWS SDK v2 参考: GetCallerIdentityCommand() - AWS SDK v3 printCallerIdentity.ts（SDK ver.2 の場合） import { STS } from &amp;#39;aws-sdk&amp;#39;; async function printCallerIdentity() { try { const sts = new STS(); const result = await sts.</description></item></channel></rss>