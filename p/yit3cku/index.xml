<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Next.js の API Routes 機能 on まくろぐ</title><link>https://maku.blog/p/yit3cku/</link><description>Recent content in Next.js の API Routes 機能 on まくろぐ</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Mon, 01 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://maku.blog/p/yit3cku/index.xml" rel="self" type="application/rss+xml"/><item><title>Next.js の API Routes 機能で Web API を作成する</title><link>https://maku.blog/p/qcp2coz/</link><pubDate>Wed, 05 May 2021 00:00:00 +0000</pubDate><guid>https://maku.blog/p/qcp2coz/</guid><description>Next.js の Web API 機能 Next.js では、pages/api ディレクトリ以下に TypeScript (JavaScript) コードを配置するだけで、クライアントサイド JavaScript から呼び出せる API を定義することができます。
例えば、次のようなファイルを作成します。
pages/api/hello.ts import type { NextApiRequest, NextApiResponse } from &amp;#39;next&amp;#39; type Response = { name: string } export default (req: NextApiRequest, res: NextApiResponse&amp;lt;Response&amp;gt;) =&amp;gt; { res.status(200).json({ name: &amp;#39;John Doe&amp;#39; }) // チェーン呼び出しせずに次のように記述しても OK // res.statusCode = 200 // res.json({ name: &amp;#39;John Doe&amp;#39;}) } あとは、Next.js サーバーを起動した状態で、/api/hello というエンドポイントにアクセスすると、次のような JSON データを取得できます。
{&amp;#34;name&amp;#34;:&amp;#34;John Doe&amp;#34;} API 機能は次のような用途に使用することができます。</description></item><item><title>Next.js から AWS DynamoDB にアクセスする</title><link>https://maku.blog/p/xp8o5k2/</link><pubDate>Tue, 02 Nov 2021 00:00:00 +0000</pubDate><guid>https://maku.blog/p/xp8o5k2/</guid><description>何をするか？ Next.js アプリの API routes (pages/*.ts) や、getServerSideProps などのサーバーサイドで実行される関数では、通常の Node.js モジュールを使うことができるため、AWS の DynamoDB からデータを取得する、といったことも自由に行えます。 ここでは、Next.js の API routes 機能を使って、DynamoDB から情報を取得する Web API を作ってみます。 具体的には次のようなことをします。
テスト用の DynamoDB テーブル (Books) を作成する Books テーブルを参照するためのアクセスキー（IAM ユーザー）を作成する Next.js の API routes の実装 (pages/api/books.ts) を行う AWS SDK を使って DynamoDB から情報を取得する /api/books/001 のような URL にアクセスすると JSON データを返す アクセスキーは環境変数で設定する ☝️ アクセスキーを使った AWS リソースのアクセスについて AWS のアクセスキーは、IAM ユーザーに設定されるものであり、このアクセスキーが漏洩すると、そのユーザーの権限で何でもできる ということになります。 そのため、アクセスキーを使用するときは、IAM ユーザーの権限を適切に絞ることが大切で、そもそも本当に必要なケースでのみアクセスキーを使うようにすべきです。 アクセスキーが必要になるのは、AWS の外から AWS リソースに直接アクセスするケースです。 例えば、AWS CLI のコマンドで AWS の制御を行う場合や、今回の例のように AWS 外のサーバーから AWS へアクセスするようなケースです。</description></item></channel></rss>