<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Java のメモ on まくろぐ</title><link>https://maku.blog/p/7zhxet9/</link><description>Recent content in Java のメモ on まくろぐ</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Wed, 13 May 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://maku.blog/p/7zhxet9/index.xml" rel="self" type="application/rss+xml"/><item><title>ISO 639-2 (alpha-3) 言語コードから Java の Locale オブジェクトを生成する</title><link>https://maku.blog/p/jbs8o3h/</link><pubDate>Wed, 13 May 2020 00:00:00 +0000</pubDate><guid>https://maku.blog/p/jbs8o3h/</guid><description>Locale クラスは ISO 639-2（3桁）の言語コードを受け付けるのか？ ISO 639-2 (alpha-3) では、言語を 3 桁のアルファベットで識別できるよう定義しています（例: 日本語は jpn）。 この言語識別子を使って、Java の Locale オブジェクトを生成できるのでしょうか？
Java の Locale クラス の説明には、次のように記載されています。
言語に alpha-2 コードと alpha-3 コードの両方がある場合は、alpha-2 コードを使用する必要があります。
また、Locale クラスのコンストラクタ の第 1 引数の説明には、次のように書かれています。
language - ISO 639 alpha-2 または alpha-3 言語コード、または最高 8 文字の言語のサブタグ。
実際に試してみると、alpha-2 コード（2桁）はほぼすべて対応しているのに対し、alpha-3 コード（3桁）は対応がいまいちのようです。
sample.kt fun main() { // alpha-2 で指定 println(Locale(&amp;#34;ja&amp;#34;).displayLanguage) // 日本語 (OK) println(Locale(&amp;#34;en&amp;#34;).displayLanguage) // 英語 (OK) println(Locale(&amp;#34;fr&amp;#34;).displayLanguage) // フランス語 (OK) println(Locale(&amp;#34;zh&amp;#34;).</description></item><item><title>Java/Kotlin で ISO 3166 国コードの一覧を取得する</title><link>https://maku.blog/p/5weufam/</link><pubDate>Mon, 11 May 2020 00:00:00 +0000</pubDate><guid>https://maku.blog/p/5weufam/</guid><description>Locale クラスで国コードのリストを取得する Locale クラスの getISOCountries() メソッド を使用すると、ISO 3166 で定義されている国コードの一覧を取得することができます。
String[] Locale.getISOCountries() ISO3166-1 alpha-2（2桁のアルファベット） Set&amp;lt;String&amp;gt; Locale.getISOCountries(Locale.IsoCountryCode.PART1_ALPHA2) ISO3166-1 alpha-2（2桁のアルファベット） Set&amp;lt;String&amp;gt; Locale.getISOCountries(Locale.IsoCountryCode.PART1_ALPHA3) ISO3166-1 alpha-3（3桁のアルファベット） Set&amp;lt;String&amp;gt; Locale.getISOCountries(Locale.IsoCountryCode.PART3) ISO3166-3（4桁のアルファベット） サンプルコード 次の Kotlin コードでは、Locale.getISOCountries() で ISO3166-1 alpha-2 の国コードをすべて取得し、それぞれについて、2桁の国コード、3桁の国コード、国名を表示しています。 Try Kotlin のサイトにコピペして実行できます。
import java.util.Locale fun main() { for (alpha2 in Locale.getISOCountries()) { val loc = Locale(&amp;#34;dummylang&amp;#34;, alpha2) val alpha3 = loc.getISO3Country() val name = loc.</description></item><item><title>Java/Kotlin で ISO 639 言語コードの一覧を取得する</title><link>https://maku.blog/p/wjxanza/</link><pubDate>Mon, 11 May 2020 00:00:00 +0000</pubDate><guid>https://maku.blog/p/wjxanza/</guid><description>Locale クラスで言語識別子のリストを取得する Locale クラスの getISOLanguages() メソッド を使用すると、ISO 639-1 alpha2 で定義されている 2 桁の言語識別子の一覧を取得することができます。
String[] Locale.getISOLanguages() サンプルコード 次の Kotlin コードでは、Locale.getISOLanguages() で ISO 639-1 alpha-2 の言語識別子をすべて取得し、それぞれについて、2桁の言語識別子、3桁の言語識別子 (ISO 639-2/T)、言語名を表示しています。 Try Kotlin のサイトにコピペして実行できます。
langcodes.kt import java.util.Locale fun main() { for (alpha2 in Locale.getISOLanguages()) { val loc = Locale(alpha2) val alpha3 = loc.getISO3Language() val name = loc.getDisplayLanguage() println(&amp;#34;$alpha2$alpha3$name&amp;#34;) } } 実行結果 aa aar Afar ab abk Abkhazian ae ave Avestan af afr Afrikaans ak aka Akan am amh Amharic .</description></item><item><title>JavaFX2 で CheckBox を ScrollPane に並べる</title><link>https://maku.blog/p/j6jv8iu/</link><pubDate>Mon, 10 Oct 2011 00:00:00 +0000</pubDate><guid>https://maku.blog/p/j6jv8iu/</guid><description>Main.java import javafx.application.Application; import javafx.scene.Group; import javafx.scene.Scene; import javafx.scene.control.CheckBox; import javafx.scene.layout.VBox; import javafx.scene.paint.Color; import javafx.stage.Stage; public class Main extends Application { public static void main(String[] args) { launch(args); } private Group createRootGroup() { CheckBox cb1 = new CheckBox(&amp;#34;First&amp;#34;); CheckBox cb2 = new CheckBox(&amp;#34;Second&amp;#34;); CheckBox cb3 = new CheckBox(&amp;#34;Third&amp;#34;); // Align vertically VBox vbox = new VBox(); vbox.setSpacing(10); vbox.getChildren().add(cb1); vbox.getChildren().add(cb2); vbox.getChildren().add(cb3); // Add to the root Group root = new Group(); root.</description></item><item><title>JavaFX2 で HelloWorld（ウィンドウの表示）</title><link>https://maku.blog/p/haq7myf/</link><pubDate>Mon, 10 Oct 2011 00:00:00 +0000</pubDate><guid>https://maku.blog/p/haq7myf/</guid><description> Main.java import javafx.application.Application; import javafx.scene.Group; import javafx.scene.Scene; import javafx.scene.paint.Color; import javafx.stage.Stage; public class Main extends Application { public static void main(String[] args) { launch(args); } @Override public void start(Stage primaryStage) { Group root = new Group(); Scene scene = new Scene(root, 400, 300, Color.GRAY); primaryStage.setScene(scene); primaryStage.show(); } }</description></item></channel></rss>